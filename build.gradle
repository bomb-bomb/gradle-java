plugins {
	id 'org.springframework.boot' version '2.4.1'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
}

group = 'com.example.gradle'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	developmentOnly("org.springframework.boot:spring-boot-devtools")
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	compile group: 'org.projectlombok', name: 'lombok', version: '1.18.16'

	compile 'org.apache.shiro:shiro-spring:1.7.0'

	compile 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.4'

	implementation 'org.springframework.boot:spring-boot-starter-batch'

	runtimeOnly 'mysql:mysql-connector-java'

	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.16'

	testImplementation 'org.awaitility:awaitility:3.1.2'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

sourceSets {
	main {
		resources {
			//可以将java目录下的所有非.java资源打包到classes下
			srcDir 'src/main/java'
		}
	}
}

test {
	useJUnitPlatform()
}
